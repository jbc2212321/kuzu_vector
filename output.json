{
  "entityList": [
    {
      "entity_name": "Eino",
      "entity_type": "框架",
      "entity_description": "Eino是一个基于Golang语言的终极大模型应用开发框架，它提供了类型定义、流数据处理机制、组件抽象定义、编排功能、切面机制等。"
    },
    {
      "entity_name": "EinoExt",
      "entity_type": "框架",
      "entity_description": "EinoExt是Eino框架的扩展，它提供了组件实现、回调处理程序实现、组件使用示例，以及各种工具，如评估器、提示优化器等。"
    },
    {
      "entity_name": "Eino Devops",
      "entity_type": "框架",
      "entity_description": "Eino Devops是Eino框架的开发运维工具，它提供了可视化开发、可视化调试等功能。"
    },
    {
      "entity_name": "EinoExamples",
      "entity_type": "框架",
      "entity_description": "EinoExamples是Eino框架的示例应用程序和最佳实践的代码仓库。"
    },
    {
      "entity_name": "MCP",
      "entity_type": "协议",
      "entity_description": "MCP是一种标准协议，它可以将LLM和各种数据源之间建立连接，实现互联。"
    }
  ],
  "relationshipList": [
    {
      "source_entity": "Eino",
      "target_entity": "EinoExt",
      "relationship_description": "EinoExt是Eino框架的扩展，它提供了组件实现、回调处理程序实现、组件使用示例，以及各种工具，如评估器、提示优化器等。",
      "relationship_strength": 9
    },
    {
      "source_entity": "Eino",
      "target_entity": "Eino Devops",
      "relationship_description": "Eino Devops是Eino框架的开发运维工具，它提供了可视化开发、可视化调试等功能。",
      "relationship_strength": 9
    },
    {
      "source_entity": "Eino",
      "target_entity": "EinoExamples",
      "relationship_description": "EinoExamples是Eino框架的示例应用程序和最佳实践的代码仓库。",
      "relationship_strength": 9
    },
    {
      "source_entity": "Eino",
      "target_entity": "MCP",
      "relationship_description": "Eino可以结合MCP使用，通过MCP可以直接将LLM和各种数据源之间建立连接，实现互联。",
      "relationship_strength": 9
    }
  ]
}